{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","ondelete","ontoggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","onDelete","onToggle","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","taskFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.577fae20.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text,onClick }) => {\r\n  \r\n  return (\r\n    <div>\r\n      <button onClick={onClick} style={{backgroundColor: color}} className=\"btn\">{text}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: \"steelblue\",\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color:PropTypes.string,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Button from './Button';\r\n\r\n\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n  const location = useLocation()\r\n  \r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{  title}</h1>\r\n      {location.pathname === '/' && (<Button\r\n        color={showAdd ? \"red\" : \"green\"}\r\n        text={showAdd ? 'Close' : 'Add'}\r\n        onClick={onAdd} />\r\n  )}\r\n    </header>\r\n      \r\n\r\n  )\r\n}\r\nHeader.defaultProps = {\r\n  title: \"Task Tracker\",\r\n}\r\nHeader.propTypes = {\r\n  title:PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import { Link } from \"react-router-dom\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>Copyright &copy; 2021</p>\r\n      <Link to='/about'>About</Link>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, ondelete, ontoggle }) => {\r\n  return (\r\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={()=> ontoggle(task.id)}>\r\n      <h3>{task.text} <FaTimes style={{ color: \"red\", cursor: \"pointer\" }} onClick={ () =>  ondelete(task.id)}/></h3>\r\n      <p>{ task.day}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task';\r\n\r\nconst Tasks = ({tasks, onDelete,onToggle}) => {\r\n  return (\r\n    <>\r\n      {tasks.map(task =>\r\n      (<Task\r\n        key={task.id}\r\n        task={task}\r\n        ondelete={onDelete} ontoggle={onToggle} />))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n\r\n\r\n\r\n// useEffect(() => {\r\n//     const getTasks = async () => {\r\n//       const tasksFromServer = await fetchTasks()\r\n//       setTasks(tasksFromServer)\r\n//   }\r\n//     getTasks()\r\n//   }, [])\r\n\r\n//   //fetch Tasks\r\n//   const fetchTasks = async () => {\r\n//     const res = await fetch(\"http://localhost:5000/tasks\")\r\n//     const data = await res.json()\r\n//     return data\r\n//     // const res = await fetch(\"http://localhost:5000/tasks\")\r\n//     // const data = await res.json()\r\n//     // console.log(data)\r\n//     //  return data\r\n//     }\r\n\r\n//   //Add Task\r\n//   const addTask = async (task) => {\r\n//     const res = await fetch(\"http://localhost:5000/tasks\", {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-type': 'application/json'\r\n//       },\r\n//       body: JSON.stringify(task)\r\n//     })\r\n//     const data = await res.json()\r\n//     setTasks([...task, data])\r\n//     // const id = Math.floor(Math.random() * 10000) + 1\r\n//     // const newTask = { id, ...task }\r\n//     // setTasks([...tasks, newTask])\r\n//   }\r\n  \r\n//   //Delete Tasks\r\n//   const deleteTask =  (id) => {\r\n//     // await fetch(`http://localhost:5000/tasks/${id}`, {\r\n//     //   method: 'DELETE',\r\n//     // })\r\n//    setTasks(tasks.filter(task => task.id !== id))\r\n//   }\r\n\r\n","import { useState } from \"react\";\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [reminder, setReminder] = useState(false);\r\n  \r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!text) {\r\n     alert(\"please add a task\")\r\n      return\r\n    }\r\n\r\n    onAdd({ text, day, reminder })\r\n    \r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n  }\r\n  return (\r\n    <div>\r\n      <form className=\"add-form\" onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label>Task</label>\r\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Add Task\"/>\r\n        </div>\r\n      </form>\r\n       <form className=\"add-form\">\r\n        <div className=\"form-control\">\r\n          <label>Day & Time</label>\r\n          <input type=\"text\" value={day} onChange={(e) => setDay(e.target.value)} placeholder=\"Add Day & Time\"/>\r\n        </div>\r\n      </form>\r\n       <form className=\"add-form\">\r\n        <div className=\"form-control form-control-check\">\r\n          <label>Set Reminder</label>\r\n          <input type=\"checkbox\"\r\n            checked={reminder}\r\n            value={reminder}\r\n            onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n        </div>\r\n        <input type=\"submit\"className=\"btn btn-block\"value=\"Save Task\" onClick={onSubmit}/>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from \"react-router-dom\"\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h4>Version 1.0.0</h4>\r\n      <Link to=\"/\">Go Back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default About\r\n","import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport About  from \"./components/About\"; \n\n\nconst App = () => {\n  const[showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const taskFromServer = await fetchTasks()\n      setTasks(taskFromServer)\n    }\n    getTasks()\n  }, [])\n  //fetch Tasks\n  const fetchTasks = async () => {\n      const res = await fetch(\"http://localhost:5000/tasks\")\n      const data = await res.json()\n      return data\n  }\n  //fetch task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n    }\n  //Add Task\n  const addTask = async (task) => {\n     const res = await fetch(\"http://localhost:5000/tasks\", {\n       method: 'POST',\n       headers: {\n         'Content-type': 'application/json',\n       },\n       body: JSON.stringify(task)\n     })\n     const data = await res.json()\n     setTasks([...tasks, data])\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  }\n  \n  //Delete Tasks\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n     })\n   setTasks(tasks.filter(task => task.id !== id))\n  }\n\n\n\n  //Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n    \n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updTask)\n    })\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? {...task, reminder:!task.reminder}: task))\n  }\n  return (\n    <Router>\n     <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddTask\n            (!showAddTask)}\n          showAdd={showAddTask}\n        />\n      \n        <Route path=\"/\" exact render={(props) => (\n          <>\n            {showAddTask && <AddTask onAdd={addTask} />}\n          {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : (\"No Tasks To Show\"\n        )}\n          </>\n        )}/>\n        <Route path=\"/about\" component={About}/>\n      <Footer />\n      </div>\n      </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}